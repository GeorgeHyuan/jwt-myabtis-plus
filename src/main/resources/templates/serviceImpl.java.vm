package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.exception.Result;
import ${package.Service}.I${entity}Service;
import java.util.List;

/**
 * @author : ${author}
 * @className : I${entity}ServiceImpl
 * @package: ${package.ServiceImpl}
 * @description : $!{table.comment} 服务接口实现
 * @date :  ${date}
 */
@Service("i${entity}Service")
public class I${entity}ServiceImpl extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements I${entity}Service{
/**
 * 添加
 *
 * @param ${table.entityPath}
 * @return
 */
@Override
@Transactional(rollbackFor = Exception.class)
public Result<String> add(${entity} ${table.entityPath}){
        return Result.success(this.save(${table.entityPath}));
        }

/**
 * 更新
 *
 * @param ${table.entityPath}
 * @return
 */
@Override
@Transactional(rollbackFor = Exception.class)
public Result<Boolean>  update(${entity} ${table.entityPath}){
        return Result.success(this.updateById(${table.entityPath}));
        }

/**
 * 删除
 *
 * @param idList
 * @return
 */
@Override
@Transactional(rollbackFor = Exception.class)
public Result<Boolean>  delete(List<Long> idList){
        return Result.success(this.removeByIds(idList));
        }

/**
 * 查询详情
 *
 * @param id
 * @return
 */
@Override
public Result<${entity}> getById(Long id){
        return Result.success(baseMapper.selectById(id));
        }

/**
 * 查询列表
 *
 * @param ${table.entityPath}
 * @return
 */
@Override
public Result<List<${entity}>>queryList(${entity} ${table.entityPath}){
        QueryWrapper<${entity}> queryWrapper=new QueryWrapper<${entity}>();
        return Result.success(this.list(queryWrapper));
        }

    ##/**
    ## * 查询分页列表
    ## *
    ## * @param page
    ## * @param ${table.entityPath}
    ## * @return
    ## */
    ##@Override
    ##public Result<IPage<${entity}>>queryPageList(Page page,${entity} ${table.entityPath}){
    ##        QueryWrapper<${entity}> queryWrapper=new QueryWrapper<${entity}>();
    ##        IPage<${entity}> pageQuery=this.page(page,queryWrapper);
    ##        return Result.success(pageQuery);
    ##        }
        }