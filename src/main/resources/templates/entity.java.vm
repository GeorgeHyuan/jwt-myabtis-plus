package ${package.Entity};

#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
#if(${entityLombokModel})

import lombok.Getter;
import lombok.Setter;
import lombok.experimental.Accessors;
    ##import lombok.EqualsAndHashCode;
    ##import com.baomidou.mybatisplus.extension.activerecord.Model;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.serializer.LongJsonDeserializer;
import com.serializer.LongJsonSerializer;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

#end

/**
 * @author : ${author}
 * @className : ${entity}
 * @package: ${package.Entity}
 * @description : $!{table.comment} 实例类
 * @date :  ${date}
 */
#if(${entityLombokModel})
@Getter
@Setter
    ##@EqualsAndHashCode(callSuper = true)
@Accessors(chain = true)
#end
#if(${table.convert})
@TableName("${table.name}")
#end
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass} implements Serializable{
#else
    ##public class ${entity} extends Model<${entity}>{
@ApiModel(value = "${entity}", description = "$!{table.comment}")
public class ${entity} implements Serializable{
#end

private static final long serialVersionUID=1L;

## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
    #if(${field.keyFlag})
        #set($keyPropertyName=${field.propertyName})
    #end
    #if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
    #end
    #if(${field.propertyType} == "Long")
    @JsonDeserialize(using = LongJsonDeserializer.class)
    @JsonSerialize(using = LongJsonSerializer.class)
    #end
    #if(${field.keyFlag})
        ## 主键
        #if(${field.keyIdentityFlag})
        @TableId(value = "${field.name}", type = IdType.ID_WORKER)
        @ApiModelProperty(value = "${field.comment}")
        #elseif(${field.convert})
        @TableId(value = "${field.name}", type = IdType.ID_WORKER)
        @ApiModelProperty(value = "${field.comment}")
        #else
        @TableId(value = "${field.name}", type = IdType.ID_WORKER)
        @ApiModelProperty(value = "${field.comment}")
        #end
        ## 普通字段
    #elseif(${field.fill})
        ## -----   存在字段填充设置   -----
        #if(${field.convert})
        @TableField(value = "${field.name}", fill = FieldFill.${field.fill})
        @ApiModelProperty(value = "${field.comment}")
        #else
        @TableField(fill = FieldFill.${field.fill})
        @ApiModelProperty(value = "${field.comment}")
        #end
    #elseif(${field.convert})
    @TableField("${field.name}")
    @ApiModelProperty(value = "${field.comment}")
    #else
    @TableField("${field.name}")
    @ApiModelProperty(value = "${field.comment}")
    #end
    ## 乐观锁注解
    #if(${versionFieldName}==${field.name})
    @Version
    #end
    ## 逻辑删除注解
    #if(${logicDeleteFieldName}==${field.name})
    @TableLogic
    #end
private ${field.propertyType} ${field.propertyName};

    #if(${field.propertyType} == "Date")
    public ${field.propertyType} get${field.capitalName}(){
            if(${field.propertyName} !=null){
            return(${field.propertyType}) ${field.propertyName}.clone();
            }
            return null;
            }

    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}){
            if(${field.propertyName} !=null){
            this.${field.propertyName} =(${field.propertyType}) ${field.propertyName}.clone();
            }
            }
    #end

#end
## ----------  END 字段循环遍历  ----------

#if(!${entityLombokModel})
    #foreach($field in ${table.fields})
        #if(${field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end

    public ${field.propertyType} ${getprefix}${field.capitalName}(){
            return ${field.propertyName};
            }

        #if(${entityBuilderModel})
        public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}){
        #else
        public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
        #end
            this.${field.propertyName} = ${field.propertyName};
        #if(${entityBuilderModel})
                return this;
        #end
            }
    #end
#end

#if(${entityColumnConstant})
    #foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} ="${field.name}";

    #end
#end

#if(!${entityLombokModel})
@Override
public String toString() {
        return "${entity}{" +
    #foreach($field in ${table.fields})
        #if($!{velocityCount}==1)
                "${field.propertyName}=" + ${field.propertyName} +
        #else
                ", ${field.propertyName}=" + ${field.propertyName} +
        #end
    #end
        "}";
        }
#end
        }